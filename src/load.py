# load.py
import pandas as pd
import os
from sqlalchemy import create_engine, text
from sqlalchemy.orm import Session
from dotenv import load_dotenv

def load_to_db_and_parquet(df: pd.DataFrame, parquet_path: str = "data/processed/processed_data.parquet"):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ .parquet –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ PostgreSQL (max 100 —Å—Ç—Ä–æ–∫).
    """
    try:
        os.makedirs(os.path.dirname(parquet_path), exist_ok=True)
        df.to_parquet(parquet_path, index=False)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {parquet_path}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        load_dotenv("write_to_db.env")

        db_url = os.getenv("DB_URL")
        db_port = os.getenv("DB_PORT")
        db_user = os.getenv("DB_USER")
        db_password = os.getenv("DB_PASSWORD")
        db_name = os.getenv("DB_NAME", "homeworks")

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        engine = create_engine(f"postgresql+psycopg2://{db_user}:{db_password}@{db_url}:{db_port}/{db_name}")
        df = df.head(100)
        df.columns = [col.lower() for col in df.columns]
        
        table_name = "gabdrakhmanova"
        df.to_sql(name=table_name, con=engine, schema="public", if_exists="replace", index=False)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É {table_name}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
        with Session(engine) as session:
            result = session.execute(text(f"SELECT * FROM public.{table_name} LIMIT 5"))
            rows = result.fetchall()
            print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ:")
            for row in rows:
                print(row)
    except Exception as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
